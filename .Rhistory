# Sentiment analysis of ePad student responses
rm(list=ls())
library(tidytext)
library(dplyr)
library(sentimentr)
library(syuzhet)
library(ggplot2)
library(qdap)
dat1 <- read.transcript(file.choose(), col.names("person", "dialogue"))
library(tidytext)
library(dplyr)
library(sentimentr)
library(syuzhet)
library(ggplot2)
library(qdap)
dat1 <- read.transcript(file.choose())
View(dat1)
dat1 <- read.transcript(file.choose(), col.names("person", "dialogue"))
dat1 <- read.transcript(file.choose(), col.names("person", "dialogue"))
dat1 <- read.transcript(file.choose(), col.names("person", "dialogue"))
colnames(dat1) <- c("person", "dialogue")
bing_lex <- get_sentiments("bing")
nrc_lex <- get_sentiments("nrc")
afinn_lex <- get_sentiments("afinn")
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
qview(dat1)
allwords(dat1)
all_words(dat1)
client_words <- all_words(dat1[,2])
View(client_words)
client_words <- order(all_words(dat1[,2]), "FREQ")
client_words <- all_words(dat1[,2])
View(client_words)
client_words <- client_words[order(FREQ),]
client_words <- client_words[order(FREQ),]
client_words <- client_words[order(client_words$FREQ),]
client_words <- client_words[order(-client_words$FREQ),]
library(tm)
install.packages("tm")
stopwords <- stopwords("en")
install.packages("plyr")
library(tm)
library(plyr)
library(qdap)
rm(list=ls())
library(tm)
library(plyr)
library(qdap)
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
client_words <- all_words(dat1[,2])
stopwords <- stopwords("en")
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
library(tm)
# library(plyr)
library(qdap)
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
client_words <- all_words(dat1[,2])
mystopwords <- stopwords("en")
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
library(tm)
# library(plyr)
library(qdap)
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
client_words <- all_words(dat1[,2])
install.packages("tm")
library(tm)
# library(plyr)
library(qdap)
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
client_words <- all_words(dat1[,2])
View(dat1)
mystopwords <- stopwords("en")
dat2 <- rm_stopwords(dat1$dialog, tm::stopwords("english"))
View(dat2)
interviewer <- split(dat1, dat1$person)[['Me']]
View(interviewer)
interviewer <- split(dat1, dat1$person)[['ME']]
interviewee <- split(dat1, dat1$persong!='ME')[['TRUE']]
interviewee <- split(dat1, dat1$person!='ME')[['TRUE']]
View(interviewee)
rm(list=ls())
library(tm)
# library(plyr)
library(qdap)
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
interviewer <- split(dat1, dat1$person)[['ME']]
interviewee <- split(dat1, dat1$person!='ME')[['TRUE']]
client_words <- all_words(interviewee[,2])
View(client_words)
client_words <- client_words[order(-client_words$FREQ),]
dat2 <- rm_stopwords(client_words, tm::stopwords("english"))  #remove common words
View(dat2)
View(dat2)
dat2 <- rm_stopwords(client_words$WORD, tm::stopwords("english"))  #remove common words
#'remove common words
rm_stopwords(client_words$WORD, tm::stopwords("english"))  #remove common words
#pull out interviewee words
client_words <- all_words(interviewee)
amatrix <- adjacency_matrix(client_words$WORD)
client_words <- tm_map(client_words, content_transformer(tolower))
tm_words <- tm_map(interviewee$dialogues, content_transformer(tolower))
tm_words <- tm_map(interviewee$dialogue, content_transformer(tolower))
mat_interviewee <- as.matrix(interviewee)
View(mat_interviewee)
tm_words <- tm_map(mat_interviewee, content_transformer(tolower))
interviewee1 <- replace_abbreviation(interviewee$dialogue)
interviewee1
interviewee1 <- replace_contraction(interviewee1)
interviewee1
my_abbs <- df(my_abv, my_rep)
my_abv <- c("bb", "vle")
my_rep <- c("Blackboard", "Virtual Learning Environment")
my_abbs <- df(my_abv, my_rep)
my_abbs <- data.frame(my_abv, my_rep)
View(my_abbs)
Key <- rbind(asbbreviations, my_abbs)
Key <- rbind(abbreviations, my_abbs)
abbreviations
my_abbs <- colnames(my_abbs, c("abv","rep"))
colnames(my_abbs) <- c("abv","rep")
Key <- rbind(abbreviations, my_abbs)
abbreviations
rm(list=ls())
library(tm)
# library(plyr)
library(qdap)
my_abv <- c("bb", "vle", "T&L", "exp", "uni", "pg")
my_rep <- c("Blackboard", "Virtual Learning Environment", "teaching and learning",
"experience", "university", "postgraduate")
my_abbs <- data.frame(my_abv, my_rep)
colnames(my_abbs) <- c("abv","rep")
Key <- rbind(abbreviations, my_abbs)
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
# split by person
interviewer <- split(dat1, dat1$person)[['ME']]
interviewee <- split(dat1, dat1$person!='ME')[['TRUE']]
interviewee1 <- replace_abbreviation(interviewee$dialogue)
interviewee1 <- replace_contraction(interviewee1)
my_abv <- c("bb", "vle", "T&L", "exp", "uni", "pg")
my_rep <- c("Blackboard", "Virtual Learning Environment", "teaching and learning",
"experience", "university", "postgraduate")
my_abbs <- data.frame(my_abv, my_rep)
colnames(my_abbs) <- c("abv","rep")
Key <- rbind(abbreviations, my_abbs)
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
# split by person
interviewer <- split(dat1, dat1$person)[['ME']]
interviewee <- split(dat1, dat1$person!='ME')[['TRUE']]
interviewee1 <- replace_abbreviation(interviewee$dialogue, Key)
interviewee1 <- replace_contraction(interviewee1)
interviewee1
interviewee1 <- replace_abbreviation(interviewee$dialogue, Key)
interviewee1 <- replace_contraction(interviewee1)
interviewee1
my_abv <- c("bb", "vle", "T&L", "exp ", "uni ", "pg", "p/t")
my_rep <- c("Blackboard", "Virtual Learning Environment", "teaching and learning",
"experience ", "university ", "postgraduate", part time)
my_abbs <- data.frame(my_abv, my_rep)
colnames(my_abbs) <- c("abv","rep")
Key <- rbind(abbreviations, my_abbs)
interviewee1 <- replace_abbreviation(interviewee$dialogue, Key)
interviewee1
bag_o_words(interviewee1, lower=F)
interviewee1 <- space_fill(interviewee1, keeps)
bag_o_words(interviewee1, lower=F)
# words to keep together
keeps <- c("Virtual Learning Environment", "teaching and learning")
interviewee1 <- space_fill(interviewee1, keeps)
bag_o_words(interviewee1, lower=F)
interviewee1 <- replace_abbreviation(interviewee$dialogue, Key)
interviewee1 <- replace_contraction(interviewee1)
interviewee1 <- space_fill(interviewee1, keeps)
interviewee1 <- strip(interviewee1, lower=F)
interviewer <- split(dat1, dat1$person)[['ME']]
interviewee <- split(dat1, dat1$person!='ME')[['TRUE']]
interviewee1 <- replace_abbreviation(interviewee$dialogue, Key)
interviewee1 <- replace_contraction(interviewee1)
interviewee1 <- space_fill(interviewee1, keeps)
interviewee1 <- strip(interviewee1, lower=F)
bag_o_words(interviewee1, lower=F)
interviewee_ords <- bag_o_words(interviewee1, lower=F)
interviewee_words <- bag_o_words(interviewee1, lower=F)
wfm(interviewee_words)
# prep tidy up
# abbreviations
my_abv <- c("bb", "vle", "T&L", "exp ", "uni ", "pg", "p/t", "fb", "it's", "I'm")
my_rep <- c("Blackboard", "Virtual Learning Environment", "teaching and learning",
"experience ", "university ", "postgraduate", "part-time", "FaceBook",
"it is", "I am")
my_abbs <- data.frame(my_abv, my_rep)
colnames(my_abbs) <- c("abv","rep")
Key <- rbind(abbreviations, my_abbs)
# words to keep together
keeps <- c("Virtual Learning Environment", "teaching and learning")
# split by person
interviewer <- split(dat1, dat1$person)[['ME']]
interviewee <- split(dat1, dat1$person!='ME')[['TRUE']]
interviewee1 <- replace_abbreviation(interviewee$dialogue, Key)
interviewee1 <- replace_contraction(interviewee1)
interviewee1 <- space_fill(interviewee1, keeps)
interviewee1 <- strip(interviewee1, lower=F)
interviewee_words <- bag_o_words(interviewee1, lower=F)
wfm(interviewee_words)
interviewee1 <- space_fill(interviewee1, keeps)
interviewee_words <- bag_o_words(interviewee1, lower=F)
interviewee_words
wfm(interviewee_words)
stemdat <- stem2df(interviewee_words)
stemdat <- stemmer(interviewee_words)
interviewee$dialogue <- replace_abbreviation(interviewee$dialogue, Key)
interviewee$dialogue <- replace_abbreviation(interviewee$dialogue, Key)
interviewee$dialogue <- replace_contraction(interviewee$dialogue)
interviewee$dialogue <- space_fill(interviewee$dialogue, keeps)
interviewee$dialogue <- strip(interviewee$dialogue, lower=F)
interviewee_words <- bag_o_words(interviewee$dialogue, lower=F)
wfm(interviewee_words)
stemdat <- stemmer(interviewee_words)
adjacency_matrix(wfm(interviewee_words)
)
amix <- adjacency_matrix(wfm(interviewee_words))
View(amix)
View(amix)
amix
amix <- adjacency_matrix(wfm(interviewee_words,"virtual learning environment"))
amix <- adjacency_matrix(wfm(interviewee_words,"Virtual~~Learning~~Environment"))
View(amix)
amix <- adjacency_matrix(wfm(interviewee$dialogue,"Virtual~~Learning~~Environment"))
amix <- adjacency_matrix(wfm(interviewee$dialogue,"had"))
amix <- adjacency_matrix(wfm(interviewee$dialogue))
out <- ngrams(interviewee$dialogue)
View(out)
ngrams(interviewee$dialogue)
iii <- rm_stopwords(interviewee_words, Top200Words)
View(iii)
View(iii)
iii <- rm_stopwords(interviewee$dialogue, Top200Words)
interviewee$dialogue <- rm_stopwords(interviewee$dialogue, Top200Words)
interviewee_words <- bag_o_words(interviewee$dialogue, lower=F)
out <- ngrams(interviewee$dialogue)
rm(list=ls())
library(tm)
# library(plyr)
library(qdap)
# read transcript
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
# prep tidy up
# abbreviations
my_abv <- c("bb", "vle", "T&L", "exp ", "uni ", "pg", "p/t", "fb", "it's", "I'm")
my_rep <- c("Blackboard", "Virtual Learning Environment", "teaching and learning",
"experience ", "university ", "postgraduate", "part-time", "FaceBook",
"it is", "I am")
my_abbs <- data.frame(my_abv, my_rep)
colnames(my_abbs) <- c("abv","rep")
Key <- rbind(abbreviations, my_abbs)
# words to keep together
keeps <- c("Virtual Learning Environment", "teaching and learning")
# split by person
interviewer <- split(dat1, dat1$person)[['ME']]
interviewee <- split(dat1, dat1$person!='ME')[['TRUE']]
interviewee$dialogue <- replace_abbreviation(interviewee$dialogue, Key)
interviewee$dialogue <- replace_contraction(interviewee$dialogue)
interviewee$dialogue <- space_fill(interviewee$dialogue, keeps)
interviewee$dialogue <- strip(interviewee$dialogue, lower=F)
interviewee$dialogue <- rm_stopwords(interviewee$dialogue, Top200Words)
View(interviewee)
interviewee$dialogue
interviewee$dialogue <- rm_stopwords(interviewee$dialogue, Top300Words)
interviewee$dialogue <- rm_stopwords(interviewee$dialogue, Top200Words)
word_stats(dat1)
# Sentiment analysis of ePad student responses
rm(list=ls())
library(tm)
# library(plyr)
library(qdap)
# read transcript
dat1 <- read.transcript(file.choose(), col.names = c("person", "dialogue"))
